# Generated by Rust/Cargo
# https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
/target/
**/*.rs.bk
*.pdb

# Cargo
Cargo.lock

# These are backup files generated by rustfmt
**/*.rs.bk

# MSVC Windows builds of rustc generate these, which store debugging information
*.pdb

# IDE and Editor files
.vscode/
.idea/
*.swp
*.swo
*~
.DS_Store
*.sublime-project
*.sublime-workspace

# Vim
*.swp
*.swo
*.swn
.netrwhist

# Emacs
*~
\#*\#
.\#*

# VS Code
.vscode/
*.code-workspace

# JetBrains IDEs (IntelliJ IDEA, CLion, etc.)
.idea/
*.iml
*.ipr
*.iws

# RSS-FUSE specific files
# Runtime directories and files
/rss-mount/
/test-mount/
/mount-point/
*.mount/

# Configuration and cache files (keep examples but ignore user configs)
/.config/
/cache/
/logs/
*.log
*.log.*

# Test data and temporary files
/test-data/
/tmp/
/temp/
*.tmp
*.temp

# FUSE related
.fuse_hidden*

# Build artifacts and generated files
/bin/
/dist/
/release/

# Documentation build artifacts
/book/
/mdbook-output/

# Profiling and debugging
*.profraw
*.profdata
flamegraph.svg
perf.data*

# Benchmark results
/criterion/
/benches/target/

# Coverage reports
/coverage/
*.lcov
*.gcov
tarpaulin-report.html

# Package manager files
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# OS generated files
Thumbs.db
ehthumbs.db
Desktop.ini
$RECYCLE.BIN/

# Linux
*~
.directory
.Trash-*

# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon?
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Windows
Thumbs.db
ehthumbs.db
Desktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msm
*.msp
*.lnk

# Environment and secrets
.env
.env.local
.env.*.local
*.key
*.pem
*.p12
*.pfx
secrets.toml

# Backup files
*.bak
*.backup
*.old
*.orig

# Temporary mount points and test directories
/mnt/
/test-mounts/
/example-mount/

# SQLite databases (if we add them later)
*.db
*.sqlite
*.sqlite3

# Compressed files (usually don't want these in git)
*.zip
*.tar.gz
*.tar.bz2
*.rar
*.7z

# RSS-FUSE runtime files
# Keep example configs but ignore user-specific ones
config.toml
feeds.toml
!examples/config.toml
!docs/examples/*.toml

# Cache and storage directories
.rss-fuse/
.cache/
storage/

# Development and debugging
debug/
*.debug
core
core.*

# Package files
*.deb
*.rpm
*.pkg
*.dmg
*.msi
*.exe

# Documentation that might be auto-generated
/target/doc/
/target/*/doc/

# Rust analyzer
rust-project.json

# Local development overrides
local.toml
dev.toml
*.local.toml